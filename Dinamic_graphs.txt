
library(plotly)
library(tidyverse)

fert<-read.csv("https://raw.githubusercontent.com/kitadasmalley/FA2020_DataViz/main/data/gapminderFert.csv", 
               header=TRUE)

head(fert)
str(fert)
summary(fert)


#Fertility rate---------------------

library(dplyr)
library(ggplot2)
p<- fert%>%
  filter(year == 2015)%>%
  ggplot(aes(fert, life, size = pop, color = continent)) +
  labs(x="Fertility Rate", y = "Life expectancy at birth (years)", 
       caption = "(Based on data from Hans Rosling - gapminder.com)", 
       color = 'Continent',size = "Population (millions)") + 
  ylim(30,100) +
  geom_point()


#Dynamic graph---------------------
#install.packages("plotly")
library(plotly)
library(ggplot2)
p<- fert%>%
  ggplot(aes(x=fert, y=life, size = pop, color = continent,frame = year)) +
  labs(x="Fertility Rate", y = "Life expectancy at birth (years)", 
       caption = "(Based on data from Hans Rosling - gapminder.com)", 
       color = 'Continent',size = "Population (millions)") + 
  ylim(30,100) +
  geom_point(aes(text=Country))

ggplotly(p)


#Using the gganimate-------------------------
#install.packages("gganimate")
library(gganimate)
#install.packages("gifski")
library(gifski)

p1 <- ggplot(fert, aes(fert, life, size = pop, color = continent, frame = year)) +
  labs(x="Fertility Rate", y = "Life expectancy at birth (years)", 
       caption = "(Based on data from Hans Rosling - gapminder.com)", 
       color = 'Continent',size = "Population (millions)") + 
  ylim(30,100) +
  geom_point() +
  #ggtitle("Year: {frame_time}") +
  transition_time(year) +
  ease_aes("linear") +
  enter_fade() +
  exit_fade()

animate(p1,fps = 4, width = 600, height = 400, renderer = gifski_renderer())